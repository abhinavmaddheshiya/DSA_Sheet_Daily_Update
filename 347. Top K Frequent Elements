class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int, int> map;
        int n=nums.size();
        for(int i=0;i<n;i++){
            map[nums[i]]+=1;
        }
        //, vector<pair<int,int>>, greater<pair<<int, int>
priority_queue<pair<int,int>> pq;
        for(auto element : map){
            pq.push({element.second, element.first});
        }
        vector<int> ans;
        while(k--){
            pair<int, int> curr=pq.top();
            ans.push_back(curr.second);
            pq.pop();
        }
        return ans;
    }
};
