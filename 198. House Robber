class Solution {
public:
    int dp[101];
    int recur(vector<int>& nums, int i){
        if(i>=nums.size())return 0;
        if(dp[i]!=-1)return dp[i];
        int notrobi=recur(nums, i+1);
        int robi=recur(nums, i+2);
        return dp[i] = max(notrobi, robi+nums[i]);
    }
    int rob(vector<int>& nums) {
        int i=0;
        memset(dp, -1, sizeof(dp));
        return recur(nums, i);
    }
};
/*class Solution {
public:
    int recur(vector<int>& nums, int i){
        if(i>=nums.size())return 0;
        int notrobi=recur(nums, i+1);
        int robi=recur(nums, i+2);
        return max(notrobi, robi+nums[i]);
    }
    int rob(vector<int>& nums) {
        int i=0;
        return recur(nums, i);
    }
};*/
